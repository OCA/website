# -*- coding: utf-8 -*-
# Copyright 2017 Jairo Llopis <jairo.llopis@tecnativa.com>
# License LGPL-3.0 or later (http://www.gnu.org/licenses/lgpl.html).

import logging

from odoo import api, fields, models


_logger = logging.getLogger(__name__)


class IrUiView(models.Model):
    _inherit = 'ir.ui.view'

    multi_theme_generated = fields.Boolean(
        name="Generated from multi theme module",
        readonly=True,
        help="Was this view autogenerated by website_multi_theme?",
    )
    was_active = fields.Boolean(
        help="Indicates if the view was originally active before converting "
             "the single website theme that owns it to multi website mode.",
    )

    # TODO Remove when merged upstream
    # HACK https://github.com/odoo/odoo/pull/17635
    @api.model
    def get_inheriting_views_arch(self, view_id, model):
        """Skip inheriting views that belong to different websites.

        :return list:
            [(view_arch, view_id), ...]
        """
        website_id = self.env.context.get("website_id")
        domain = [("website_id", "=", False)]
        if website_id:
            domain = ["|"] + domain + [("website_id", "=", website_id)]
        allowed_view_ids = set(self.search(domain).ids)
        result = super(IrUiView, self).get_inheriting_views_arch(
            view_id,
            model,
        )
        return filter(lambda item: item[1] in allowed_view_ids, result)

    # workaround before PR is merged https://github.com/odoo/odoo/pull/18462
    def _read_template_keys(self):
        res = super(IrUiView, self)._read_template_keys()
        if 'website_id' not in res:
            res += ['website_id']
        return res
